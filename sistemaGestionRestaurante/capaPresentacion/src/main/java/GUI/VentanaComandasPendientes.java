package GUI;

import entidades.Comanda;
import enums.EstadoComanda;
import enums.EstadoMesa;
import excepciones.NegocioException;
import interfaces.IComandaBO;
import interfaces.IMesaBO;
import interfaces.IProductoBO;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import manejadoresDeObjetoNegocio.ManejadorObjetosNegocio;
import utils.IconCellRenderer;

/**
 *
 * @author janot
 */
public class VentanaComandasPendientes extends javax.swing.JFrame {
    private boolean esAdmin = true;
    private Control control = new Control();
    private IComandaBO comandaBO;
    private IMesaBO mesaBO;
    private Comanda comanda;
    
    
    /**
     * Creates new form VentanaComandasPendientes
     */
    public VentanaComandasPendientes() {
        comandaBO = ManejadorObjetosNegocio.crearComandaBO();
        mesaBO = ManejadorObjetosNegocio.crearMesaBO();
        initComponents();
        cargarDatosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelRegresar = new javax.swing.JLabel();
        jLabelComandas = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelHistorialComandas = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableComandas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelRegresar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/arrow-small-left.png"))); // NOI18N
        jLabelRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegresarMouseClicked(evt);
            }
        });
        jPanel1.add(jLabelRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabelComandas.setFont(new java.awt.Font("Product Sans Infanity", 1, 66)); // NOI18N
        jLabelComandas.setForeground(new java.awt.Color(0, 0, 0));
        jLabelComandas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelComandas.setText("Comandas Pendientes");
        jPanel1.add(jLabelComandas, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        jPanel2.setBackground(new java.awt.Color(69, 71, 75));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelHistorialComandas.setFont(new java.awt.Font("Product Sans Infanity", 1, 24)); // NOI18N
        jLabelHistorialComandas.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHistorialComandas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelHistorialComandas.setText("Pendientes");
        jPanel2.add(jLabelHistorialComandas, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 320, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 920, 40));

        jTableComandas.setBackground(new java.awt.Color(255, 255, 255));
        jTableComandas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Folio", "Fecha", "Mesa", "Cliente", "Estado", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableComandas.setRowHeight(40);
        jTableComandas.setRowSelectionAllowed(false);
        jTableComandas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableComandasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableComandas);
        if (jTableComandas.getColumnModel().getColumnCount() > 0) {
            jTableComandas.getColumnModel().getColumn(0).setResizable(false);
            jTableComandas.getColumnModel().getColumn(1).setResizable(false);
            jTableComandas.getColumnModel().getColumn(2).setResizable(false);
            jTableComandas.getColumnModel().getColumn(3).setResizable(false);
            jTableComandas.getColumnModel().getColumn(4).setResizable(false);
            jTableComandas.getColumnModel().getColumn(5).setResizable(false);
            jTableComandas.getColumnModel().getColumn(6).setResizable(false);
            jTableComandas.getColumnModel().getColumn(7).setResizable(false);
            jTableComandas.getColumnModel().getColumn(8).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 910, 370));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 600));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegresarMouseClicked
        if (esAdmin) {
            control.mostrarPantallaMenuAdmin();
        }
        else{
            control.mostrarPantallaMenuMesero();
        }
        
        control.cerrarPantalla(this);
    }//GEN-LAST:event_jLabelRegresarMouseClicked

    private void jTableComandasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableComandasMouseClicked
        funcionalidadIconTablaCancelarComanda(evt);
        funcionalidadIconTablaFinalizar(evt);
        funcionalidadIconTablaProductos(evt);
    }//GEN-LAST:event_jTableComandasMouseClicked

    
    private void cargarDatosTabla(){
        List<Comanda> comandas = new ArrayList<>();
        try {
            comandas = comandaBO.consultarComandasPendientes();
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        
        Icon iconoProductos = new ImageIcon(getClass().getResource("/imagenes/ingredientes.png"));
        Icon iconoFinalizar = new ImageIcon(getClass().getResource("/imagenes/finalizar.png"));
        Icon iconoCancelar = new ImageIcon(getClass().getResource("/imagenes/eliminar-documento.png"));
        
        DefaultTableModel model = (DefaultTableModel) jTableComandas.getModel();
        model.setRowCount(0);
        for (Comanda comanda : comandas) {
            model.addRow(new Object[]{
                comanda.getId(),
                comanda.getFolio(),
                comanda.getFechaComanda(),
                comanda.getMesa(),
                comanda.getCliente(),
                comanda.getEstado(),
                
                
            });
        }
        
        jTableComandas.setModel(model);
        
       
        jTableComandas.getColumnModel().getColumn(0).setMinWidth(0);
        jTableComandas.getColumnModel().getColumn(0).setMaxWidth(0);
        jTableComandas.getColumnModel().getColumn(0).setWidth(0);
        
        jTableComandas.getColumnModel().getColumn(6).setMinWidth(40);
        jTableComandas.getColumnModel().getColumn(6).setMaxWidth(40);
        jTableComandas.getColumnModel().getColumn(6).setWidth(40);
        
        jTableComandas.getColumnModel().getColumn(7).setMinWidth(40);
        jTableComandas.getColumnModel().getColumn(7).setMaxWidth(40);
        jTableComandas.getColumnModel().getColumn(7).setWidth(40);
        
        jTableComandas.getColumnModel().getColumn(8).setMinWidth(40);
        jTableComandas.getColumnModel().getColumn(8).setMaxWidth(40);
        jTableComandas.getColumnModel().getColumn(8).setWidth(40);
        
        jTableComandas.getColumnModel().getColumn(6).setCellRenderer(new IconCellRenderer(iconoProductos));
        jTableComandas.getColumnModel().getColumn(7).setCellRenderer(new IconCellRenderer(iconoFinalizar));
        jTableComandas.getColumnModel().getColumn(8).setCellRenderer(new IconCellRenderer(iconoCancelar));
    }

    
    private void funcionalidadIconTablaCancelarComanda(MouseEvent evt){
        int fila = jTableComandas.rowAtPoint(evt.getPoint());
        int columna = jTableComandas.columnAtPoint(evt.getPoint());

        if (columna == 8) { // columna del ícono
            Object id = jTableComandas.getModel().getValueAt(fila, 0);
            if(id != null){
                try {
                    Comanda comandaCancelada = comandaBO.cancelarComanda((Long) id);
                    mesaBO.cambiarEstadoMesa(comandaCancelada.getMesa().getId(), EstadoMesa.DISPONIBLE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }
            cargarDatosTabla();
        } 
    }
    
    private void funcionalidadIconTablaFinalizar(MouseEvent evt){
        int fila = jTableComandas.rowAtPoint(evt.getPoint());
        int columna = jTableComandas.columnAtPoint(evt.getPoint());

        if (columna == 7) { // columna del ícono
            Object id = jTableComandas.getModel().getValueAt(fila, 0);
            if(id != null){
                try {
                    Comanda comandaFinalizada = comandaBO.finalizarComanda((Long) id);
                    mesaBO.cambiarEstadoMesa(comandaFinalizada.getMesa().getId(), EstadoMesa.DISPONIBLE);
                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }
            cargarDatosTabla();
        } 
    }
    
    private void funcionalidadIconTablaProductos(MouseEvent evt){
        int fila = jTableComandas.rowAtPoint(evt.getPoint());
        int columna = jTableComandas.columnAtPoint(evt.getPoint());

        if (columna == 6) { // columna del ícono
            Object id = jTableComandas.getModel().getValueAt(fila, 0);
            if(id != null){
                control.mostrarPantallaModificarComanda(this, rootPaneCheckingEnabled);
            }
        } 
    }

    public void setEsAdmin(boolean esAdmin) {
        this.esAdmin = esAdmin;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelComandas;
    private javax.swing.JLabel jLabelHistorialComandas;
    private javax.swing.JLabel jLabelRegresar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableComandas;
    // End of variables declaration//GEN-END:variables
}
