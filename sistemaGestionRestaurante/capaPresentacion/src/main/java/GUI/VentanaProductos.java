package GUI;

import BO.ProductoBO;
import entidades.IngredienteProducto;
import entidades.Producto;
import enums.EstadoProducto;
import enums.TipoProducto;
import excepciones.NegocioException;
import interfaces.IProductoBO;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import manejadoresDeObjetoNegocio.ManejadorObjetosNegocio;
import utils.IconCellRenderer;
import utils.EstadoCellRenderer;

/**
 *
 * @author janot
 */
public class VentanaProductos extends javax.swing.JFrame {
    private Control control = new Control();
    private IProductoBO productoBO;
    private List<Producto> productos = new ArrayList<>();
    protected List<IngredienteProducto> ingredientesDeProducto;
    protected Producto producto;
    
    /**
     * Creates new form VentanaProductos
     */
    public VentanaProductos() {
        productoBO = ManejadorObjetosNegocio.crearProductoBO();
        initComponents();
        asignarDatosListaProductos();
        cargarDatosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelRegresar = new javax.swing.JLabel();
        jLabelProductos = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelProductosDelMenu = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelIconFiltro = new javax.swing.JLabel();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jLabelProductoNuevo2 = new javax.swing.JLabel();
        jLabelCategoria = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jLabelEstado3 = new javax.swing.JLabel();
        jLabelProductoNuevo1 = new javax.swing.JLabel();
        jLabelIconProductoNuevo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProductos = new javax.swing.JTable();
        jLabelFiltrar2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelRegresar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/arrow-small-left.png"))); // NOI18N
        jLabelRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegresarMouseClicked(evt);
            }
        });
        jPanel1.add(jLabelRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabelProductos.setFont(new java.awt.Font("Product Sans Infanity", 1, 66)); // NOI18N
        jLabelProductos.setForeground(new java.awt.Color(0, 0, 0));
        jLabelProductos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelProductos.setText("Productos");
        jPanel1.add(jLabelProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, -1));

        jPanel2.setBackground(new java.awt.Color(69, 71, 75));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelProductosDelMenu.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelProductosDelMenu.setText("Productos del Menu");
        jLabelProductosDelMenu.setFont(new java.awt.Font("Product Sans Infanity", 1, 24)); // NOI18N
        jLabelProductosDelMenu.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabelProductosDelMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 320, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 920, 40));

        jPanel3.setBackground(new java.awt.Color(217, 217, 217));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelIconFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/filter.png"))); // NOI18N
        jPanel3.add(jLabelIconFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jComboBoxCategoria.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new TipoProducto[] {null,TipoProducto.PLATILLO, TipoProducto.BEBIDA, TipoProducto.POSTRE }));
        jComboBoxCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxCategoriaItemStateChanged(evt);
            }
        });
        jPanel3.add(jComboBoxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 80, 30));

        jLabelProductoNuevo2.setText("Nuevo");
        jLabelProductoNuevo2.setFont(new java.awt.Font("Product Sans Infanity", 1, 18)); // NOI18N
        jLabelProductoNuevo2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jLabelProductoNuevo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 30, -1, -1));

        jLabelCategoria.setFont(new java.awt.Font("Product Sans Infanity", 0, 18)); // NOI18N
        jLabelCategoria.setForeground(new java.awt.Color(0, 0, 0));
        jLabelCategoria.setText("Categoria:");
        jPanel3.add(jLabelCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jTextFieldBuscar.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarKeyTyped(evt);
            }
        });
        jPanel3.add(jTextFieldBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, 150, 30));

        jLabelEstado3.setText("Buscar:");
        jLabelEstado3.setFont(new java.awt.Font("Product Sans Infanity", 0, 18)); // NOI18N
        jLabelEstado3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel3.add(jLabelEstado3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, -1, -1));

        jLabelProductoNuevo1.setFont(new java.awt.Font("Product Sans Infanity", 1, 18)); // NOI18N
        jLabelProductoNuevo1.setForeground(new java.awt.Color(0, 0, 0));
        jLabelProductoNuevo1.setText("Producto");
        jPanel3.add(jLabelProductoNuevo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, -1, -1));

        jLabelIconProductoNuevo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIconProductoNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add.png"))); // NOI18N
        jLabelIconProductoNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelIconProductoNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelIconProductoNuevoMouseClicked(evt);
            }
        });
        jPanel3.add(jLabelIconProductoNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 0, -1, 70));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 920, 70));

        jTableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Precio", "Tipo", "Estado", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProductos.setRowHeight(30);
        jTableProductos.setRowSelectionAllowed(false);
        jTableProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProductos);
        if (jTableProductos.getColumnModel().getColumnCount() > 0) {
            jTableProductos.getColumnModel().getColumn(0).setResizable(false);
            jTableProductos.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTableProductos.getColumnModel().getColumn(1).setResizable(false);
            jTableProductos.getColumnModel().getColumn(2).setResizable(false);
            jTableProductos.getColumnModel().getColumn(3).setResizable(false);
            jTableProductos.getColumnModel().getColumn(4).setResizable(false);
            jTableProductos.getColumnModel().getColumn(5).setResizable(false);
            jTableProductos.getColumnModel().getColumn(6).setResizable(false);
            jTableProductos.getColumnModel().getColumn(7).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 920, 370));

        jLabelFiltrar2.setFont(new java.awt.Font("Product Sans Infanity", 1, 18)); // NOI18N
        jLabelFiltrar2.setForeground(new java.awt.Color(255, 255, 255));
        jLabelFiltrar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFiltrar2.setText("Filtrar");
        jLabelFiltrar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(jLabelFiltrar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 350, 100, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 920, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegresarMouseClicked
        control.mostrarPantallaMenuAdmin();
        control.cerrarPantalla(this);
    }//GEN-LAST:event_jLabelRegresarMouseClicked

    private void jLabelIconProductoNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelIconProductoNuevoMouseClicked
        control.mostrarPantallaProductoNuevo(this, rootPaneCheckingEnabled);
        limpiarBusqueda();
    }//GEN-LAST:event_jLabelIconProductoNuevoMouseClicked

    private void jTextFieldBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarKeyTyped
        asignarDatosListaProductos();
        buscador();
    }//GEN-LAST:event_jTextFieldBuscarKeyTyped

    private void jComboBoxCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxCategoriaItemStateChanged
        asignarDatosListaProductos();
        buscador();
    }//GEN-LAST:event_jComboBoxCategoriaItemStateChanged

    private void jTableProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProductosMouseClicked
        funcionalidadIconTablaCambiarEstadoProducto(evt);
        funcionalidadIconTablaModificar(evt);
        funcionalidadIconTablaIngredientes(evt);
        cargarDatosTabla();
        producto = null;
    }//GEN-LAST:event_jTableProductosMouseClicked

    public void asignarDatosListaProductos(){
        try {
            this.productos = productoBO.consultarTodosLosProductos();
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    public void cargarDatosTabla(){
        Icon iconoIngredientes = new ImageIcon(getClass().getResource("/imagenes/ingredientes.png"));
        Icon iconoModificar = new ImageIcon(getClass().getResource("/imagenes/modificar.png"));
        Icon iconoInhabilitado = new ImageIcon(getClass().getResource("/imagenes/inhabilitado.png"));
        Icon iconoHabilitado = new ImageIcon(getClass().getResource("/imagenes/habilitado.png"));
        
        DefaultTableModel model = (DefaultTableModel) jTableProductos.getModel();
        model.setRowCount(0);
        
        for (Producto producto : productos) {
            model.addRow(new Object[]{
                producto.getId(),
                producto.getNombre(),
                producto.getPrecio(),
                producto.getTipo(),
                producto.getEstado()
            });
        }
       
        
        jTableProductos.setModel(model);
        jTableProductos.getColumnModel().getColumn(0).setMinWidth(0);
        jTableProductos.getColumnModel().getColumn(0).setMaxWidth(0);
        jTableProductos.getColumnModel().getColumn(0).setWidth(0);
        
        jTableProductos.getColumnModel().getColumn(5).setMinWidth(40);
        jTableProductos.getColumnModel().getColumn(5).setMaxWidth(40);
        jTableProductos.getColumnModel().getColumn(5).setWidth(40);
        
        jTableProductos.getColumnModel().getColumn(6).setMinWidth(40);
        jTableProductos.getColumnModel().getColumn(6).setMaxWidth(40);
        jTableProductos.getColumnModel().getColumn(6).setWidth(40);
        
        jTableProductos.getColumnModel().getColumn(7).setMinWidth(40);
        jTableProductos.getColumnModel().getColumn(7).setMaxWidth(40);
        jTableProductos.getColumnModel().getColumn(7).setWidth(40);
        
        jTableProductos.getColumnModel().getColumn(5).setCellRenderer(new IconCellRenderer(iconoIngredientes));
        jTableProductos.getColumnModel().getColumn(6).setCellRenderer(new IconCellRenderer(iconoModificar));
        jTableProductos.getColumnModel().getColumn(7).setCellRenderer(new EstadoCellRenderer(iconoHabilitado,iconoInhabilitado));
    }
    
    private void buscador(){
        String busqueda = jTextFieldBuscar.getText();
        TipoProducto tipoProducto = (TipoProducto) jComboBoxCategoria.getSelectedItem();
        
        try {
            productos = productoBO.busquedaProducto(tipoProducto, busqueda);
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
       cargarDatosTabla();
    }
    
    private void limpiarBusqueda(){
        jTextFieldBuscar.setText("");
        jComboBoxCategoria.setSelectedItem(null);
    }
    
    private void funcionalidadIconTablaCambiarEstadoProducto(MouseEvent evt){
        int fila = jTableProductos.rowAtPoint(evt.getPoint());
        int columna = jTableProductos.columnAtPoint(evt.getPoint());
        
        if (columna == 7) { // columna del ícono
            Object id = jTableProductos.getModel().getValueAt(fila, 0);
            Object nombreIngrediente = jTableProductos.getModel().getValueAt(fila, 1);
            Object estado = jTableProductos.getModel().getValueAt(fila, 4);
            
            if(estado.equals(EstadoProducto.HABILITADO)){
                int decision = JOptionPane.showConfirmDialog(this, "Desea Inhabilitar el Producto: " + nombreIngrediente);   
                if (decision == JOptionPane.YES_OPTION) {
                        try {
                            productoBO.inhabilitarProductoDelMenu((Long) id);
                        } catch (NegocioException e) {
                            JOptionPane.showMessageDialog(this, e.getMessage());
                    }
                }
            }
            
            else if(estado.equals(EstadoProducto.INHABILITADO)){
                int decision = JOptionPane.showConfirmDialog(this, "Desea Habilitar el Producto: " + nombreIngrediente);   
                if (decision == JOptionPane.YES_OPTION) {
                        try {
                            productoBO.habilitarProductoDelMenu((Long) id);
                        } catch (NegocioException e) {
                            JOptionPane.showMessageDialog(this, e.getMessage());
                    }
                }
            }
        }
        asignarDatosListaProductos();
        cargarDatosTabla();
    }
    
    private void funcionalidadIconTablaModificar(MouseEvent evt){
        int fila = jTableProductos.rowAtPoint(evt.getPoint());
        int columna = jTableProductos.columnAtPoint(evt.getPoint());
        
        if (columna == 6) { // columna del ícono
            Object id = jTableProductos.getModel().getValueAt(fila, 0);
            System.out.println("Modificar producto con ID: " + id);
            
            obtenerProductoAmodificar((Long) id);
           
            control.mostrarPantallaModificarProducto(this, rootPaneCheckingEnabled);
        }
    }
    
    private void funcionalidadIconTablaIngredientes(MouseEvent evt){
        int fila = jTableProductos.rowAtPoint(evt.getPoint());
        int columna = jTableProductos.columnAtPoint(evt.getPoint());
        
        if (columna == 5) { // columna del ícono
            Object id = jTableProductos.getModel().getValueAt(fila, 0);
            obtenerIngredientesDeProducto((Long) id);
            control.mostrarPantallaIngredienteDeProducto(this, rootPaneCheckingEnabled);
        }
    }
    
    private void obtenerIngredientesDeProducto(Long idProducto){
        try {
            ingredientesDeProducto = productoBO.consultarIngredientesProducto(idProducto);
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    private void obtenerProductoAmodificar(Long idProducto){
        try {
            System.out.println(productoBO.consultarProductoPorId(idProducto));
            producto = productoBO.consultarProductoPorId(idProducto);
            ingredientesDeProducto = productoBO.consultarIngredientesProducto(idProducto);
            producto.setIngredientes(ingredientesDeProducto);
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> jComboBoxCategoria;
    private javax.swing.JLabel jLabelCategoria;
    private javax.swing.JLabel jLabelEstado3;
    private javax.swing.JLabel jLabelFiltrar2;
    private javax.swing.JLabel jLabelIconFiltro;
    private javax.swing.JLabel jLabelIconProductoNuevo;
    private javax.swing.JLabel jLabelProductoNuevo1;
    private javax.swing.JLabel jLabelProductoNuevo2;
    private javax.swing.JLabel jLabelProductos;
    private javax.swing.JLabel jLabelProductosDelMenu;
    private javax.swing.JLabel jLabelRegresar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProductos;
    private javax.swing.JTextField jTextFieldBuscar;
    // End of variables declaration//GEN-END:variables
}
